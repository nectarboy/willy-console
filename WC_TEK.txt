; ==== WILLY CONSOLE - TECHNICAL REFERENCE ==== ;

; ---- Console Specs

CPU: 8 bit willy-CPU
Runs at 2,619,060 hertz

Resolution: 128x112 pixels
Tile size: 8x8 pixels
Refresh Rate: 59.7hz

Sound: idk

; ---- Memory Specs

Willy Console can address up to 0xffff bytes of memory.
It has a 16 bit program counter, and a number of 16 bit instructions to do whatever with it.

; Memory Map

+--------------------+
| ROM                |
|  0x0000 - 0x5fff   |
|                    |
|                    |
|                    |
|                    |
+--------------------+
| VRAM               |
|  0x6000 - 0x7fff   |
+--------------------+
| OM: 0x8000 - 0x80ef|
+--------------------+
| PM: 0x80d0 - 0x80ff|
+--------------------+
| EM: 0x8100 - 0x8fff|
+--------------------+
|      -------       |
+--------------------+
| WRAM               |
|  0xa000 - 0xcfff   |
|                    |
+--------------------+
|      -------       |
|      -------       |
+--------------------+
| IO: 0xf000 - 0xf0ff|
+--------------------+
| HI: 0xf100 - 0xffff|
+--------------------+

; Memory Usage

ROM: 0x6000 bytes of ROM found in cartridge.
If none is available, it just acts as unused memory.

VRAM: 0x2000 bytes of VRAM - made up of tiledata, tilemap, and palletemap.

OM: 0xd0 bytes of object/sprite memory.
PM: 0x30 bytes of pallete data.

EM: 0xf00 bytes of external RAM found in a cartridge. Can be used for save data, extra ram, or anything.
If none is available, it just acts as unused memory.

WRAM: 0x3000 bytes of work RAM.

IO: 0x100 bytes of memory mapped io registers.
HI: 0xf00 bytes of hi-RAM used for usually storing temporary data.

Address spaces marked in a ------- represent 0x1000 spaces of unused memory each.
dont try to use em cuz u cant write or read from em (reads return 0xff)

; ---- CPU Specs

; ---- Video Specs

MODE 0 - Tile Mode

Mode 0 is a tilemap mode, 

MODE 1 - Bitmap Mode

Mode 1 transforms the entirety of vram into a bitmap, each pixel capable of displaying one of 16 colors. Like mode 0, it is fully capable of scrolling as well.

Each pixel in the bitmap is represented by a 4-bit index pointing to a pallete located in PM.

The pixel order follows the same order as the order the tilemap in mode 0 follows.

[ maybe we could add a dma for video ? ]
